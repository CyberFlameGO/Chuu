package core.music.sources.youtube.webscrobbler.processers;

import com.sedmelluq.discord.lavaplayer.tools.JsonBrowser;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class DescriptionProcesser implements YtSingleProcessser {
    private static final String ytDescFirstLine = "Provided to YouTube";
    private static final String ytDescLastLine = "Auto-generated by YouTube.";
    private static final String ytDescSeparator = " Â· ";

    public Processed processDescription(String description) {
        if (description == null || (!description.startsWith(ytDescFirstLine) && !description.endsWith(ytDescLastLine))) {
            return null;
        } else {
            List<String> lines = Arrays.stream(description.split("\n"))
                    .filter(t -> t.length() > 0).filter(t -> !t.startsWith(ytDescFirstLine)).toList();
            String firstLine = lines.get(0);
            String secondLine = lines.get(1);

            String[] trackInfo = firstLine.split(ytDescSeparator);
            int numberOfFields = trackInfo.length;

            String artist = null;
            String track;
            List<String> featArtists = new ArrayList<>();

            if (numberOfFields < 2) {
                track = trackInfo[0];
            } else if (numberOfFields == 2) {
                track = trackInfo[0];
                artist = trackInfo[1];
            } else {
                track = trackInfo[0];
                artist = trackInfo[1];
                featArtists = Arrays.asList(Arrays.copyOfRange(trackInfo, 2, trackInfo.length));
            }
            if (featArtists.stream().anyMatch(track::contains)) {
                String featArtistsStr = String.join(", ", featArtists);
                track =
                        track + " (feat. " + featArtistsStr + ")";
            }
            return new Processed(artist, secondLine, track);
        }
    }

    @Override
    public Processed processSingle(JsonBrowser details, JsonBrowser main) {
        String description = details.get("videoDetails").get("shortDescription").safeText();
        return processDescription(description);
    }
}
